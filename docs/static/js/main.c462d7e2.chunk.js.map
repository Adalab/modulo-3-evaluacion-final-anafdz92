{"version":3,"sources":["images/morty.png","images/space.jpg","services/getDataApi.js","components/CharacterCard.js","components/CharacterList.js","components/Filter.js","components/CharacterDetail.js","components/App.js","index.js"],"names":["module","exports","getDataApi","fetch","then","response","json","data","results","map","item","image","name","species","status","location","episode","id","CharacterCard","props","console","log","className","to","src","alt","title","CharacterList","itemElements","items","sort","a","b","localeCompare","key","length","filterContent","Filter","onSubmit","ev","preventDefault","htmlFor","type","onChange","handleFilter","target","value","placeholder","CharacterDetail","undefined","App","useState","setItems","JSON","parse","localStorage","getItem","setFilterContent","loading","setLoading","useEffect","setItem","stringify","filteredCharacters","filter","toUpperCase","includes","exact","path","Logo","Img","render","itemId","parseInt","match","params","foundItem","find","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.c462d7e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/morty.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/space.a077b29f.jpg\";","const getDataApi = () => {\n  return fetch(\"https://rickandmortyapi.com/api/character/\")\n    .then((response) => response.json())\n    .then((data) => {\n      return data.results.map((item) => {\n        return {\n          // DATOS CHARACTERCARD\n          image: item.image,\n          name: item.name,\n          species: item.species,\n\n          // DATOS CHARACTERDETAIL\n          status: item.status,\n          location: item.location.name,\n          episode: item.episode,\n\n          //ID\n          id: item.id,\n        };\n      });\n    });\n};\n\nexport default getDataApi;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst CharacterCard = (props) => {\n  console.log(props);\n  return (\n    <>\n      <li className=\"item\">\n        <Link to={`/item/${props.item.id}`}>\n          <div className=\"imgContainer\">\n            <img\n              className=\"itemImg\"\n              src={props.item.image}\n              alt={props.item.name}\n              title={props.item.name}\n            />\n          </div>\n          <h4 className=\"itemName\">{props.item.name}</h4>\n          <p className=\"itemSpecie\">{props.item.species}</p>\n        </Link>\n      </li>\n    </>\n  );\n};\n\nCharacterCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired,\n};\n\nexport default CharacterCard;\n","import React from \"react\";\nimport CharacterCard from \"./CharacterCard\";\n\nconst CharacterList = (props) => {\n  const itemElements = props.items\n    .sort((a, b) => a.name.localeCompare(b.name))\n    .map((item) => {\n      return <CharacterCard key={item.id} item={item} />;\n    });\n\n  if (props.items.length === 0) {\n    return (\n      <>\n        <p>No hay ningún personaje que coincida con la palabra:</p>\n        <span>{props.filterContent}</span>\n      </>\n    );\n  }\n  //con {data}\n  else {\n    return <ul className=\"itemsList\">{itemElements}</ul>;\n  }\n};\n\nexport default CharacterList;\n","import React from \"react\";\n\nconst Filter = (props) => {\n  const handleChange = (ev) => {\n    props.handleFilter(ev.target.value);\n  };\n\n  const submitHandler = (ev) => {\n    ev.preventDefault();\n  };\n\n  return (\n    <>\n      <form onSubmit={submitHandler} className=\"formFilter\">\n        <label htmlFor=\"character\"> ENCUENTRA A A TU PERSONAJE FAVORITO </label>\n        <input\n          className=\"inputFilter\"\n          type=\"text\"\n          name=\"character\"\n          id=\"character\"\n          onChange={handleChange}\n          handleFilter={props.handleFilter}\n          placeholder={props.filterContent} //INTENTO QUE EL LOCAL STORAGE SE  PINTE EN EL VALUE\n        />\n      </form>\n    </>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst CharacterDetail = (props) => {\n  if (props.item === undefined) {\n    return (\n      <>\n        <section className=\"bodyDetail\">\n          <Link to=\"/item/:id\">\n            <div className=\"detail\">\n              <Link to=\"/\">\n                <p>CIÉRRAME</p>\n              </Link>\n              <p>El personaje que buscas no existe </p>\n            </div>\n          </Link>\n        </section>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <section className=\"bodyDetail\">\n          <Link to=\"/item/:id\" className=\"linkDetail\">\n            <div className=\"detail\">\n              <div className=\"imgDetail\">\n                <img\n                  className=\"imgDetailExact\"\n                  src={props.item.image}\n                  alt={props.item.name}\n                  title={props.item.name}\n                />\n              </div>\n              <ul className=\"textDetail\">\n                <li>Nombre: {props.item.name}</li>\n                <li>Especie: {props.item.species}</li>\n                <li>Planeta: {props.item.location}</li>\n                <li>\n                  Vivo o muerto?: {props.item.status}\n                  {/* <i className={iClassName}></i> */}\n                  <i className=\"fas fa-skull-crossbones\"></i>\n                </li>\n                <li>\n                  Número de Episodios en los que aparece:{\" \"}\n                  {props.item.episode.length}\n                </li>\n              </ul>\n              <Link to=\"/\">\n                <p className=\"Close\"> Volver</p>\n              </Link>\n            </div>\n          </Link>\n        </section>\n      </>\n    );\n  }\n};\n// let iClassName = \"\";\n\n// if (props.item.status.dead) {\n//   iClassName = \"fas fa-skull-crossbones\";\n// }\n//TRYING ICONS\n\nCharacterDetail.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  episode: PropTypes.string.isRequired,\n};\n\nexport default CharacterDetail;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport getDataApi from \"../services/getDataApi\";\nimport CharacterList from \"./CharacterList\";\nimport Filter from \"./Filter\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Logo from \"../images/morty.png\";\nimport Img from \"../images/space.jpg\";\n\nconst App = () => {\n  const [items, setItems] = useState([].sort());\n  const [filterContent, setFilterContent] = useState(\n    JSON.parse(localStorage.getItem(\"myValueLocalStorage\")) || \"Busca aquí\"\n  );\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getDataApi().then((data) => {\n      setItems(data);\n    });\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"myValueLocalStorage\", JSON.stringify(filterContent));\n  });\n\n  //EVENT HANDLERS\n  const handleFilter = (data) => {\n    setFilterContent(data);\n  };\n\n  //HANDLE RESET\n  // const resetItemData = (ev) => {\n  //   setFilterContent([]);\n  // };\n\n  //RENDER\n  const filteredCharacters = items.filter((item) => {\n    return item.name.toUpperCase().includes(filterContent.toUpperCase());\n  });\n\n  //REACT ROUTER\n  const renderCharacterDetail = (props) => {\n    const itemId = parseInt(props.match.params.id);\n    const foundItem = items.find((item) => {\n      return item.id === itemId;\n    });\n    return <CharacterDetail item={foundItem} />;\n  };\n\n  return (\n    <div className=\"main\">\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"title\">\n            <img\n              src={Logo}\n              alt=\"Rick and Morty\"\n              title=\"Rick and Morty\"\n              className=\"titleImg\"\n            />\n            <img src={Img} alt=\"morty\" title=\"morty\" className=\"titleImgII\" />\n          </div>\n          <div className=\"filterContainer\">\n            {/* <Reset reset={resetItemData} /> */}\n            <Filter handleFilter={handleFilter} filterContent={filterContent} />\n            {loading === true\n              ? \"Cargando...\"\n              : \"Mostrando tus datos cargados! Bien!...\"}\n          </div>\n          <CharacterList\n            items={filteredCharacters}\n            filterContent={filterContent}\n          />\n        </Route>\n        <Route path=\"/item/:id\" render={renderCharacterDetail} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport \"../src/stylesheets/main.scss\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}